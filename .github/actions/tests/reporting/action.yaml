name: 'Test Reporting and Logs'
description: 'Generates metadata reports, uploads test reports to S3, and collects Docker logs when tests fail'
author: 'konrad'
inputs:
  report_xml:
    description: 'Should xunit report be uploaded'
    required: false
    default: 'true'
  execution_status:
    description: 'Should docker logs be uploaded'
    required: true
  matrix:
    description: 'Matrix for the test'
    required: false
runs:
  using: "composite"
  steps:
    - name: Generate metadata and upload test reports
      shell: bash
      id: metadata_report
      if: always()
      env:
        REPORT_NAME: ${{ github.repository }}_${{ github.run_id }}_${{ github.run_attempt }}-${{steps.env_up.outputs.ts}}
        METADATA_REPORT_PATH: metadata.toml
        MATRIX: ${{ toJson(env.matrix) }}
      run: |
        # Generate metadata report
        set -eo pipefail
        echo "[metadata]
        repo = ${{ github.repository }}
        branch = ${{ github.ref }}
        commit = ${{ github.sha }}
        test_suite_version = $BASE_REF
        test_suite_name = ${{ github.job }}
        test_suite_run = ${{ github.run_id }}-${{ github.run_attempt }}
        db = ${{ matrix.envfiles.db }}
        conf = ${{ matrix.envfiles.config }}
        cache = ${{ matrix.envfiles.cache }}
        pump_compatibility = ${{ matrix.pump }}
        sink_compatibility = ${{ matrix.sink }}
        " | tee ${METADATA_REPORT_PATH}
        aws s3 cp ${XUNIT_REPORT_PATH}  s3://assets.dev.tyk.technology/testreports/${REPORT_NAME#*/}.xml
        aws s3 cp ${METADATA_REPORT_PATH} s3://assets.dev.tyk.technology/testreports/${REPORT_NAME#*/}.metadata.toml
    - name: Docker logs for all components
      if: always() && inputs.execution_status != 'success' 
      working-directory: auto
      shell: bash
      env:
        pull_policy: 'if_not_present'
        ECR: ${{ steps.ecr.outputs.registry }}
      run: |
        docker compose -p auto -f pro-ha.yml -f deps_pro-ha.yml -f ${{ matrix.envfiles.db }}.yml -f ${{ matrix.envfiles.cache }}.yml --env-file versions.env --profile all logs | sort > ${{ github.workspace }}/docker-compose.log
        echo "::group::DockerLogs"
        cat ${{ github.workspace }}/docker-compose.log
        echo "::endgroup::"
    - name: Upload compose logs
      uses: actions/upload-artifact@v4
      if: inputs.execution_status != 'success'
      with:
        name: docker-compose-logs-${{ github.job }}-${{ matrix.envfiles.db }}-${{ matrix.envfiles.config }}-${{ github.run_id }}
        path: ${{ github.workspace }}/docker-compose.log
        retention-days: 10
        overwrite: true
        