name: Go test

on:
  workflow_call:
    inputs:
      goversion:
        type: string
        default: "1.17.x"
      mongo:
        type: string
      redis:
        type: string

jobs:
  gotest:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go-version }}
    - uses: actions/checkout@v3
    
    - name: Start Redis
      if: ${{ inputs.redis != "" }}
      uses: supercharge/redis-github-action@1.2.0
      with:
        redis-version: '${{ inputs.redis }}'

    - name: Start MongoDB
      if: ${{ inputs.mongo != "" }}
      uses: supercharge/mongodb-github-action@1.2.0
      with:
        mongodb-version: '${{ inputs.mongo }}'    
        
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Go Test
      run: |
        PKGS="$(go list ./...)"
        OPTS="$@"
        if [[ -z "$OPTS" ]]; then
          OPTS="-race -count=1 -failfast -v"
        fi
        
        for pkg in ${PKGS}; do
            tags=""
            if [[ ${pkg} == *"goplugin" ]]; then
                tags="-tags 'goplugin'"
            fi

            coveragefile=`echo "$pkg" | awk -F/ '{print $NF}'`

            echo go test ${OPTS} -timeout 15m -coverprofile=${coveragefile}.cov ${pkg} ${tags}
            go test ${OPTS} -timeout 15m -coverprofile=${coveragefile}.cov ${pkg} ${tags}
        done
    - uses: actions/upload-artifact@v3
      with:
        name: coverage
        path: "*cov"
