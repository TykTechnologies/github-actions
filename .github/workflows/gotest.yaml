name: Go test

on:
  workflow_call:
    inputs:
      go:
        type: string
        default: "1.17.x"
      mongo:
        type: string
      redis:
        type: string
      test-options:
        type: string
        default: "-race -count=1 -failfast -v"

jobs:
  gotest:
    name: Go Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-go@v5.1.0
      with:
        go-version: ${{ inputs.go }}
    - uses: actions/checkout@v4.2.2
    
    - name: Start Redis
      if: ${{ inputs.redis != '' }}
      uses: supercharge/redis-github-action@1.8.0
      with:
        redis-version: '${{ inputs.redis }}'

    - name: Start MongoDB
      if: ${{ inputs.mongo != '' }}
      uses: supercharge/mongodb-github-action@1.11.0
      with:
        mongodb-version: '${{ inputs.mongo }}'    
        
    - name: Cache
      uses: actions/cache@v4.2.0
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
          
    - name: Set up test tooling
      run: |
        go install gotest.tools/gotestsum@latest
       
    - name: Go Test
      id: test
      run: |
        PKGS="$(go list ./...)"
        OPTS="${{ inputs.test-options }}"
        
        for pkg in ${PKGS}; do
            tags=""
            if [[ ${pkg} == *"goplugin" ]]; then
                tags="--tags 'goplugin'"
            fi

            coveragefile=`echo "$pkg" | awk -F/ '{print $NF}'`

            echo go test ${OPTS} -json -timeout 15m -coverprofile=${coveragefile}.cov ${pkg} ${tags}
            
            gotestsum --junitfile ${coveragefile}.xml --raw-command go test ${OPTS} --json -timeout 15m -coverprofile=${coveragefile}.cov ${pkg} ${tags}
        done

    - uses: actions/upload-artifact@v4.4.3
      with:
        name: coverage
        path: "*cov"
    - uses: actions/upload-artifact@v4.4.3
      if: ${{ always() }}
      with:
        name: junit
        path: "*xml"
    - name: Github report view
      if: ${{ always() }}
      uses: phoenix-actions/test-reporting@v15
      with:
        name: Unit Test Results
        path: "*.xml"
        reporter: java-junit
